// <auto-generated />
using System;
using HB_LI4.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HB_LI4.Migrations
{
    [DbContext(typeof(HB_LI4DbContext))]
    partial class HB_LI4DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.26");

            modelBuilder.Entity("HB_LI4.Models.Categoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("HB_LI4.Models.Cliente", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PalavraPasse")
                        .HasColumnType("TEXT");

                    b.Property<int>("Telemovel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("HB_LI4.Models.Funcionario", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("PalavraPasse")
                        .HasColumnType("TEXT");

                    b.Property<int>("telemovel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("HB_LI4.Models.Lance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClienteID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FormaPagamento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LeilaoID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID")
                        .HasDatabaseName("fk1_lance_idx");

                    b.HasIndex("LeilaoID")
                        .HasDatabaseName("fk2_lance_idx");

                    b.ToTable("Lances");
                });

            modelBuilder.Entity("HB_LI4.Models.Leilao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoriaID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClienteID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("FuncionarioID")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("FuncionarioId");

                    b.Property<string>("FuncionarioId")
                        .HasColumnType("TEXT")
                        .HasColumnName("FuncionarioId1");

                    b.Property<byte[]>("Imagem")
                        .HasColumnType("BLOB");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecoFinal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PrecoInicial")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("leilaoPago")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("ClienteID")
                        .HasDatabaseName("fk1_leilao_idx");

                    b.HasIndex("FuncionarioID")
                        .HasDatabaseName("fk2_leilao_idx");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Leiloes");
                });

            modelBuilder.Entity("HB_LI4.Models.Mensagem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClienteID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LeilaoID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("mensEnviada")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("LeilaoID");

                    b.ToTable("Mensagens");
                });

            modelBuilder.Entity("HB_LI4.Models.Lance", b =>
                {
                    b.HasOne("HB_LI4.Models.Cliente", "ClienteIDNavigation")
                        .WithMany("Lances")
                        .HasForeignKey("ClienteID")
                        .IsRequired()
                        .HasConstraintName("fk1_lance");

                    b.HasOne("HB_LI4.Models.Leilao", "LeilaoIDNavigation")
                        .WithMany("Lances")
                        .HasForeignKey("LeilaoID")
                        .IsRequired()
                        .HasConstraintName("fk2_lance");

                    b.Navigation("ClienteIDNavigation");

                    b.Navigation("LeilaoIDNavigation");
                });

            modelBuilder.Entity("HB_LI4.Models.Leilao", b =>
                {
                    b.HasOne("HB_LI4.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID");

                    b.HasOne("HB_LI4.Models.Cliente", "ClienteIDNavigation")
                        .WithMany("Leiloes")
                        .HasForeignKey("ClienteID")
                        .HasConstraintName("fk1_leilao");

                    b.HasOne("HB_LI4.Models.Funcionario", "FuncionarioIDNavigation")
                        .WithMany()
                        .HasForeignKey("FuncionarioID")
                        .IsRequired()
                        .HasConstraintName("fk2_leilao");

                    b.HasOne("HB_LI4.Models.Funcionario", null)
                        .WithMany("Leiloes")
                        .HasForeignKey("FuncionarioId");

                    b.Navigation("Categoria");

                    b.Navigation("ClienteIDNavigation");

                    b.Navigation("FuncionarioIDNavigation");
                });

            modelBuilder.Entity("HB_LI4.Models.Mensagem", b =>
                {
                    b.HasOne("HB_LI4.Models.Cliente", "Cliente")
                        .WithMany("Mensagens")
                        .HasForeignKey("ClienteID");

                    b.HasOne("HB_LI4.Models.Leilao", "Leilao")
                        .WithMany("Mensagens")
                        .HasForeignKey("LeilaoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Leilao");
                });

            modelBuilder.Entity("HB_LI4.Models.Cliente", b =>
                {
                    b.Navigation("Lances");

                    b.Navigation("Leiloes");

                    b.Navigation("Mensagens");
                });

            modelBuilder.Entity("HB_LI4.Models.Funcionario", b =>
                {
                    b.Navigation("Leiloes");
                });

            modelBuilder.Entity("HB_LI4.Models.Leilao", b =>
                {
                    b.Navigation("Lances");

                    b.Navigation("Mensagens");
                });
#pragma warning restore 612, 618
        }
    }
}
